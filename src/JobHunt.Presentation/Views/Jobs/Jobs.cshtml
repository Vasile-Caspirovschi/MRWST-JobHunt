@using JobHunt.Application.Jobs
@model JobsViewModel

@{
    ViewData["Title"] = "Jobs";
}

<!-- ***** Fleet Starts ***** -->
<section class="section" id="trainers">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 offset-lg-1">
                <div class="section-heading">
                    <h2>Available <em>Jobs</em></h2>
                    <img src="~/images/line-dec.png" alt="">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3">
                <div class="row">
                    <div class="col-12">
                        <div class="small-section-tittle2 mb-45">
                            <div class="ion">
                                <svg xmlns="http://www.w3.org/2000/svg"
                                     xmlns:xlink="http://www.w3.org/1999/xlink"
                                     width="20px" height="12px">
                                    <path fill-rule="evenodd" fill="rgb(27, 207, 107)"
                                          d="M7.778,12.000 L12.222,12.000 L12.222,10.000 L7.778,10.000 L7.778,12.000 ZM-0.000,-0.000 L-0.000,2.000 L20.000,2.000 L20.000,-0.000 L-0.000,-0.000 ZM3.333,7.000 L16.667,7.000 L16.667,5.000 L3.333,5.000 L3.333,7.000 Z" />
                                </svg>
                            </div>
                            <h4 class="custom-primary-color">Filter Jobs</h4>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <form action="#">
                        <div class="job-category-listing mb-50">
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h4 class="custom-primary-color">Job Category</h4>
                                </div>
                                <input class="form-control" onkeypress="updateUrlParamsOnEnter(event, 'byCategory', this.value)" list="categoryListOptions" placeholder="Type to search...">
                                <datalist id="categoryListOptions">
                                    <option value="It "></option>
                                    <option value="New York"></option>
                                    <option value="Seattle"></option>
                                    <option value="Los Angeles"></option>
                                    <option value="Chicago"></option>
                                </datalist>
                                <div class="select-Categories pt-80 pb-50">
                                    <div class="small-section-tittle2">
                                        <h4 class="custom-primary-color">Job Type</h4>
                                    </div>
                                    <label class="container">
                                        Full Time
                                        <input type="checkbox" name="FullTime" onchange="updateUrlParams('byType', 'FullTime', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        Part Time
                                        <input type="checkbox" name="PartTime" onchange="updateUrlParams('byType', 'PartTime', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        Remote
                                        <input type="checkbox" name="Remote" onchange="updateUrlParams('byType', 'Remote', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        Freelance
                                        <input type="checkbox" name="Freelance" onchange="updateUrlParams('byType', 'Freelance', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <!-- select-Categories End -->
                            </div>
                            <!-- single two -->
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h4 class="custom-primary-color">Job Location</h4>
                                </div>
                                <input class="form-control" onkeypress="updateUrlParamsOnEnter(event, 'byLocation', this.value)" list="locationListOptions" placeholder="Type to search...">
                                <datalist id="locationListOptions">
                                    <option value="San Francisco"></option>
                                    <option value="New York"></option>
                                    <option value="Seattle"></option>
                                    <option value="Los Angeles"></option>
                                    <option value="Chicago"></option>
                                </datalist>
                                <div class="select-Categories pt-80 pb-50">
                                    <div class="small-section-tittle2">
                                        <h4 class="custom-primary-color">Experience</h4>
                                    </div>
                                    <label class="container">
                                        0-1 Years
                                        <input type="checkbox" name="ZeroToOneYears" onchange="updateUrlParams('byExperience', 'ZeroToOneYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        1-2 Years
                                        <input type="checkbox" name="OneToTwoYears" onchange="updateUrlParams('byExperience', 'OneToTwoYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        2-3 Years
                                        <input type="checkbox" name="TwoToThreeYears" onchange="updateUrlParams('byExperience', 'TwoToThreeYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        3-6 Years
                                        <input type="checkbox" name="ThreeToSixYears" onchange="updateUrlParams('byExperience', 'ThreeToSixYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        6-more..
                                        <input type="checkbox" name="SixOrMoreYears" onchange="updateUrlParams('byExperience', 'SixOrMoreYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="d-flex justify-content-between">
                            <span>39, 782 Jobs found</span>
                            <!-- Select job items start -->
                            <div class="d-flex ">
                                <span class="white-space: nowrap;">Sort by</span>
                                <select class="form-select form-select-sm" name="select">
                                    <option value="">None</option>
                                    <option value="">job list</option>
                                    <option value="">job list</option>
                                    <option value="">job list</option>
                                </select>
                            </div>
                            <!--  Select job items End-->
                        </div>
                    </div>
                </div>

                @foreach (var job in Model.Jobs)
                {
                    <div class="job-item p-4 mb-4">
                        <div class="row g-4">
                            <div class="col-sm-12 col-md-8 d-flex align-items-center">
                                <img class="img-thumbnail border rounded" src="@job.CompanyLogoUrl" alt="" style="width: 80px; height: 80px;">
                                <div class="text-start ps-4">
                                    <h5 class="mb-3">@job.Title</h5>
                                    <span class="text-truncate me-3"><i class="fa fa-map-marker custom-primary-color me-2"></i>@job.Location</span>
                                    <span class="text-truncate me-3"><i class="fa fa-clock-o custom-primary-color me-2"></i>@job.JobType</span>
                                    <span class="text-truncate me-0"><i class="fa fa-money custom-primary-color me-2"></i>@job.JobSalary</span>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-4 d-flex flex-column align-items-start align-items-md-end justify-content-center">
                                <div class="d-flex mb-3">
                                    <a class="btn btn-light btn-square me-3" href=""><i class="fa fa-heart-o custom-primary-color"></i></a>
                                    <a class="btn btn-outline-primary" asp-action="JobDetails" asp-route-jobPostId="@job.Id">See details</a>
                                </div>
                                <small class="text-truncate"><i class="fa fa-calendar custom-primary-color me-2"></i>@job.PublishDate</small>
                            </div>
                        </div>
                    </div>
                }

                <br>
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Jobs" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>

                    @* @if (Model.TotalPages > 1)
                    {
                    <li class="page-item"><a class="page-link" asp-action="Jobs" asp-route-pageNumber="1" asp-route-pageSize="@Model.PageSize">1</a></li>
                    } *@
                    @if (Model.CurrentPage > Model.Step)
                    {
                        <li class="page-item disabled"><a class="page-link">...</a></li>
                    }

                    @for (int i = Model.FromPage; i <= Model.ToPage; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            <a class="page-link" asp-action="Jobs" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">
                                @i
                            </a>
                        </li>
                    }

                    @if (Model.CurrentPage < @Model.TotalPages - Model.Step)
                    {
                        <li class="page-item disabled"><a class="page-link">...</a></li>
                    }

                    @if (Model.TotalPages > Model.Step)
                    {
                        <li class="page-item"><a class="page-link" asp-action="Jobs" asp-route-pageNumber="@Model.TotalPages" asp-route-pageSize="@Model.PageSize">@Model.TotalPages</a></li>
                    }
                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Jobs" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>

            </div>
</section>

<script>
    function updateUrlParams(paramName, paramValue, isChecked) {
        var url = new URL(window.location.href);
        var params = new URLSearchParams(url.search);
        var existingValue = params.get(paramName);
        if (isChecked) {
            localStorage.setItem(paramValue, isChecked);
            if (existingValue !== null) {
                paramValue = existingValue + ',' + paramValue;
            }
            params.set(paramName, paramValue);
        } else {
            if (existingValue !== null) {
                var valuesArray = existingValue.split(',');
                var index = valuesArray.indexOf(paramValue);
                if (index !== -1) {
                    valuesArray.splice(index, 1);
                    localStorage.removeItem(paramValue);

                    paramValue = valuesArray.join(',');
                    if (paramValue === '') {
                        params.delete(paramName);
                    } else {
                        params.set(paramName, paramValue);
                    }
                }
            }
        }
        url.search = params.toString();
        // window.history.replaceState({}, '', url.toString());
        window.location.href = url.toString();
    }

    function setCheckboxStates() {
        var paramValue = '';
        for (var i = 0; i < localStorage.length; i++) {
            var key = localStorage.key(i);
            var isChecked = localStorage.getItem(key);
            if (isChecked === "true") {
                paramValue = paramValue + ',' + key;
                document.querySelector('input[type="checkbox"][name="' + key + '"]').checked = true;
            }
        }

        if (paramValue !== '') {
            var url = new URL(window.location.href);
            var params = new URLSearchParams(url.search);
            params.set('byExperience', paramValue);
            url.search = params.toString();
        }
    }

    function updateUrlParamsOnEnter(e, paramName, paramValue) {
        if (e.key === 'Enter') {
            var url = new URL(window.location.href);
            var params = new URLSearchParams(url.search);
            params.set(paramName, paramValue);
            url.search = params.toString();
            // window.history.replaceState({}, '', url.toString());
            window.location.href = url.toString();
        }
    }

    window.onload = function () {
        setCheckboxStates();
    };

</script>