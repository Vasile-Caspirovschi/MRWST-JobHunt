@using JobHunt.Application.Jobs
@model JobsViewModel

@{
    ViewData["Title"] = "Jobs";
}

<!-- ***** Fleet Starts ***** -->
<section class="section" id="trainers">
    <div class="container">
        <form action="/Jobs/Jobs" method="get" id="globalFilterForm">
            <input type="hidden" class="filter" name="byType" value="@Context.Request.Query["byType"]" />
            <input type="hidden" class="filter" name="byExperience" value="@Context.Request.Query["byExperience"]" />

            <div class="row">
                <div class="col-lg-10 offset-lg-1">
                    <div class="section-heading">
                        <h2>Available <em>Jobs</em></h2>
                        <img src="~/images/line-dec.png" alt="">
                    </div>
                </div>
            </div>
            <div class="row gx-5">
                <div class="col-lg-3">
                    <div class="row">
                        <div class="job-category-listing">
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <div class="ion">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             xmlns:xlink="http://www.w3.org/1999/xlink"
                                             width="20px" height="12px">
                                            <path fill-rule="evenodd" fill="rgb(27, 207, 107)"
                                                  d="M7.778,12.000 L12.222,12.000 L12.222,10.000 L7.778,10.000 L7.778,12.000 ZM-0.000,-0.000 L-0.000,2.000 L20.000,2.000 L20.000,-0.000 L-0.000,-0.000 ZM3.333,7.000 L16.667,7.000 L16.667,5.000 L3.333,5.000 L3.333,7.000 Z" />
                                        </svg>
                                    </div>
                                    <h4 style=" font-size: 22px;" class="custom-primary-color">Filter Jobs</h4>
                                </div>
                            </div>
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h5 class="custom-primary-color">Job Category</h5>
                                </div>
                                <input class="form-control filter" onkeypress="updateUrlParamsOnEnter(event, 'byCategory', this.value)" name="byCategory" list="categoryListOptions" placeholder="Type to search category...">
                                <datalist id="categoryListOptions">
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category"></option>
                                    }
                                </datalist>
                            </div>
                            <div class="single-listing">
                                <div class="select-Categories pt-80 pb-50">
                                    <div class="small-section-tittle2">
                                        <h5 class="custom-primary-color">Job Type</h5>
                                    </div>
                                    <label class="container">
                                        Full Time
                                        <input type="checkbox" name="FullTime" onchange="updateUrlParams('byType', 'FullTime', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        Part Time
                                        <input type="checkbox" name="PartTime" onchange="updateUrlParams('byType', 'PartTime', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        Remote
                                        <input type="checkbox" name="Remote" onchange="updateUrlParams('byType', 'Remote', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        Freelance
                                        <input type="checkbox" name="Freelance" onchange="updateUrlParams('byType', 'Freelance', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                            </div>
                            <!-- single two -->
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h5 class="custom-primary-color">Job Location</h5>
                                </div>
                                <input class="form-control filter" onkeypress="updateUrlParamsOnEnter(event, 'byLocation', this.value)" name="byLocation" list="locationListOptions" placeholder="Type to search...">
                                <datalist id="locationListOptions">
                                    <option value="San Francisco"></option>
                                    <option value="New York"></option>
                                    <option value="Seattle"></option>
                                    <option value="Los Angeles"></option>
                                    <option value="Chicago"></option>
                                </datalist>
                            </div>
                            <div class="single-listing">
                                <div class="select-Categories pt-80 pb-50">
                                    <div class="small-section-tittle2">
                                        <h5 class="custom-primary-color">Experience</h5>
                                    </div>
                                    <label class="container">
                                        0-1 Years
                                        <input type="checkbox" name="ZeroToOneYears" onchange="updateUrlParams('byExperience', 'ZeroToOneYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        1-2 Years
                                        <input type="checkbox" name="OneToTwoYears" onchange="updateUrlParams('byExperience', 'OneToTwoYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        2-3 Years
                                        <input type="checkbox" name="TwoToThreeYears" onchange="updateUrlParams('byExperience', 'TwoToThreeYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        3-6 Years
                                        <input type="checkbox" name="ThreeToSixYears" onchange="updateUrlParams('byExperience', 'ThreeToSixYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        6-more..
                                        <input type="checkbox" name="SixOrMoreYears" onchange="updateUrlParams('byExperience', 'SixOrMoreYears', this.checked)">
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                            </div>
                            <div class="single-listing">
                                <a asp-action="Jobs" id="clearFilterButton" asp-controller="Jobs" class="btn btn-outline-primary btn-sm"><i class="fa fa-trash"></i> Clear filters</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9">
                    <div class="row mb-3">
                        <div class="input-group">
                            <input type="text" class="form-control filter" name="searchKey" oninput="updateUrlParamsOnEnter(e, 'searchKey', this.value" value="@Context.Request.Query["searchKey"]" placeholder="Search position or company">
                            <div class="input-group-append">
                                <button class="btn btn-outline-primary" onclick="submitFilterForm()">Search</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="d-flex justify-content-between mb-3">
                                <span>@Model.Pagination?.TotalItems jobs found</span>
                                <div class="d-flex" style="gap:1rem;">
                                    <span style="text-wrap: nowrap;">Sort by</span>
                                    <select class="form-select form-select-sm filter" onchange="submitFilterForm()" name="sortByPostedDate">
                                        <option value="newest" selected="@(Context.Request.Query["sortByPostedDate"] == "newest")">Newest</option>
                                        <option value="oldest" selected="@(Context.Request.Query["sortByPostedDate"] == "oldest")">Oldest</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @foreach (var job in Model.Jobs)
                        {
                            <div class="job-item p-4 mb-4">
                                <div class="row g-4">
                                    <div class="col-sm-12 col-md-8 d-flex align-items-center">
                                        <img class="img-thumbnail border rounded" src="@job.CompanyLogoUrl" alt="" style="width: 80px; height: 80px;">
                                        <div class="text-start ps-4">
                                            <h5 class="mb-3">@job.Title</h5>
                                            <span class="text-truncate me-3"><i class="fa fa-map-marker custom-primary-color me-2"></i>@job.Location</span>
                                            <span class="text-truncate me-3"><i class="fa fa-clock-o custom-primary-color me-2"></i>@job.JobType</span>
                                            <span class="text-truncate me-0"><i class="fa fa-money custom-primary-color me-2"></i>@job.JobSalary</span>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-4 d-flex flex-column align-items-start align-items-md-end justify-content-center">
                                        <div class="d-flex mb-3">
                                            @* <a class="btn btn-light btn-square me-3" href=""><i class="fa fa-heart-o custom-primary-color"></i></a> *@
                                            <a class="btn btn-outline-primary" asp-action="JobDetails" asp-route-jobPostId="@job.Id">See details</a>
                                        </div>
                                        <div>
                                            <small class="text-truncate me-3"><i class="fa fa-building custom-primary-color me-2"></i>@job.CompanyName</small>
                                            <small class="text-truncate"><i class="fa fa-calendar custom-primary-color me-2"></i>@job.PublishDate</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="row">
                <partial name="/Views/Shared/Partial/PaginationPartial.cshtml" for="@Model.Pagination" />
            </div>
        </form>
    </div>
</section>

<script>
    function updateUrlParams(paramName, paramValue, isChecked) {
        let form = document.getElementById('globalFilterForm');
        let input = form.querySelector(`input[name="${paramName}"]`);
        var currentParamValue = input.value || 'any';

        if (isChecked) {
            if (currentParamValue !== 'any') {
                paramValue = currentParamValue + ',' + paramValue;
            }
        } else {
            var values = currentParamValue.split(',').filter(value => value !== paramValue && value !== '');
            paramValue = values.join(',') || 'any';
        }
        input.value = paramValue;
        submitFilterForm();
    }


    function submitFilterForm() {
        var form = document.getElementById('globalFilterForm');
        var inputs = form.querySelectorAll('input.filter');
        var checkboxes = form.querySelectorAll('input[type="checkbox"]');

        checkboxes.forEach((checkbox) => {
            checkbox.disabled = true;
        });

        console.log(inputs);
        inputs.forEach((input) => {
            if (input.value === '' && input.name !== 'searchKey') {
                input.value = 'any';
            }
        });
        form.submit();
    }

    document.addEventListener('DOMContentLoaded', function () {
        let url = new URL(window.location.href);
        let params = new URLSearchParams(url.search);

        let checkboxes = document.querySelectorAll('input[type="checkbox"]');
        let categoryInput = document.querySelector('input[name="byCategory"]');
        let locationInput = document.querySelector('input[name="byLocation"]');

        let checkedCheckboxes = params.get('byType') ?? '';
        checkedCheckboxes += ',' + (params.get('byExperience') ?? '');
        checkedCheckboxes = checkedCheckboxes.split(',');

        checkboxes.forEach((checkbox) => {
            if (checkedCheckboxes.includes(`${checkbox.name}`)) {
                checkbox.checked = true;
            }
        });

        categoryInput.value = params.get('byCategory') !== 'any' ? params.get('byCategory') : '';
        locationInput.value = params.get('byLocation') !== 'any' ? params.get('byLocation') : '';
    });


    // function filterFormChanged() {
    //     document.querySelector('#globalFilterForm')
    //         .addEventListener('input', () => {
    //             document.querySelector('#clearFilterButton').classList.remove('disabled', 'custom-primary-color');
    //             console.log('changed');
    //         });
    // }


    function updateUrlParamsOnEnter(e, paramName, paramValue) {
        if (e.key === 'Enter') {
            let form = document.getElementById('globalFilterForm');
            let input = form.querySelector(`input[name="${paramName}"]`);
            input.value = paramValue || 'any';
            submitFilterForm();
        }
    }
</script>