@model PaginationViewModel

<ul class="pagination pagination-md justify-content-center">
    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
        <a class="page-link" data-page-number="@(Model.CurrentPage - 1)" href="#" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span>
        </a>
    </li>

    @* @if (Model.TotalPages > 1)
    {
    <li class="page-item"><a class="page-link" asp-action="Jobs" asp-route-pageNumber="1" asp-route-pageSize="@Model.PageSize">1</a></li>
    } *@
    @if (Model.CurrentPage > Model.Step)
    {
        <li class="page-item disabled"><a class="page-link">...</a></li>
    }

    @for (int i = Model.FromPage; i <= Model.ToPage; i++)
    {
        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
            <a class="page-link" data-page-number="@i" href="#">
                @i
            </a>
        </li>
    }

    @if (Model.CurrentPage < @Model.TotalPages - Model.Step)
    {
        <li class="page-item disabled"><a class="page-link">...</a></li>
    }

    @if (Model.TotalPages > Model.Step)
    {
        <li class="page-item"><a class="page-link" data-page-number="@Model.TotalPages" href="#">@Model.TotalPages</a></li>
    }
    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
        <a class="page-link" data-page-number="@(Model.CurrentPage + 1)" href="#" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Next</span>
        </a>
    </li>
</ul>

<script>
    function updatePaginationParams(pageNumber) {
        let url = new URL(window.location.href);
        let params = new URLSearchParams(url.search);

        params.set('pageNumber', pageNumber);
        // params.set('pageSize', pageNumber);

        window.location.href = '?' + params.toString();
    }

    document.addEventListener('DOMContentLoaded', function () {
        let url = new URL(window.location.href);
        let params = new URLSearchParams(url.search);

        let page = params.get('pageNumber') || 1;
        let paginationLinks = document.querySelectorAll('.pagination a.page-link');

        paginationLinks.forEach(link => {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                updatePaginationParams(this.dataset.pageNumber);
            });
        });

        // paginationLinks.forEach(link => {
        //     if (link.dataset.pageNumber == page) {
        //         link.parentElement.classList.add('active');
        //     }
        // });
    });
</script>